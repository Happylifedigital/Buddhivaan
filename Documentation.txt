When app opens
it asks for user id and  password
when user enters the user id and the tag is present in firebase for user id , then the id gets stored in id label, which then on successful password verification 
store the id in tiny db id tag...

I also created another back end app where we can check for available school ids, add school , remove school from the list


Whenever i register a student i want following data with mentioned purpose:
student's id password: as (student_id: student_password)
student's class: every students class must be specified as (student_id_class:class_id) 

First student login
-
1) the tinydb stores username in username tag
2) firebase requests username_class
3) it stores username_class in username_class tinydb
4) firebase requests class_teachercount for number of teachers
5) it stores teacher_count in class_teachercount tinydb and also to variable i
6) firebase requests class_teacher_1 for first teacher id 
7) Once firebase receives first teacher id, i-1 takes place, id is stored in classid_teacher_1

The Firebase teacher count asks for number of teachers
stores that number in classid_teachers_count in tinydb

then firebase ask_teacher_list asks for first teacher data
and teachers_list_updated gets and stores data using recursive function within 
tinydb tag classid_teachers_0[count eg:1,2,3....]

at last when last teachers data is received: it will ask for schoolname for update purpose which contains unique school id

Student Data in tinydb tags:
1) username: 
- contains the username of student in format id@school_id
- it is stored when login is success along with correct password
- it is requested using searching for username tag in firebase which contains password as its value , bucket Userdata

2) usertype:
- it contains the verification that given user is a student 
- it is stored after username and only stored if given value is "student"
- it is requested using username_usertype in firebase,  bucket Userdata

3) username_class:
- here the class id of the student is stored in his unique username_class
- it is stored after checking that given user is a student 
- it is requested using username_class in firebase,  bucket Userdata

4) classid_subjectcount:
- it contains the number of subjects for that class 
- it is stored after getting class id from username_class
- it is requested using classid_subjectcount ,  bucket Classes


Creating a new user:
1) store userid@schoolid:password as key value
2) store username_usertype:student as key value
3) store username_class:schoolid@classth@division
4) store *classid_subjectcount:*count

Firebase assignments data:

1) *classid_subject_*subjectcount_ac: *count = counts number of assignments in that class's subject
2) classid_subject_*subjectcount_a_*ac: *Subject Name = Contains name of the subject

Requesting assignments on student page initialize:
1) Call Fdb2 for *classid_subject_*subjectcount_ac (bucket Assignments) ()
2) Fdb2:

If #subjectcount != 0, (initialized from classid_subjectcount), 
then 
if getvalue != no value
      set #subjectcount to #subjectcount -1 
      and 
      call Fdb2 *classid_subject_*subjectcount_ac
else if if getvalue != 0
      set #subjectcount to #subjectcount -1 
      and 
      call Fdb2 *classid_subject_*subjectcount_ac
else 
    set #acdone= 1
    #ac= getvalue
    and 
    call Fdb3 classid_subject_*subjectcount_a_*ac
    and
    set fbstore=name

3) Fdb3:
